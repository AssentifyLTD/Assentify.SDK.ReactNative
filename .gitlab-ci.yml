image: node:latest

stages:
  - deploy

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/
    - public/
    - .cache/

build-package:
    stage: deploy
    rules:
        - if: $CI_COMMIT_BRANCH == "package"
    script:
        # Install dependencies
        - echo "INSTALLING DEPENDENCIES"
        - npm install --legacy-peer-deps --ignore-engines
        # Build App
        - echo "Building Mobile Packages..."
        - npm run prepare
        - npm config set -- '//${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken' "${CI_JOB_TOKEN}"
        - npm publish

build-canary:
    stage: deploy
    rules:
        - if: $CI_COMMIT_BRANCH == "canary"
    script:
        # Install dependencies
        - echo "INSTALLING DEPENDENCIES"
        - npm install --legacy-peer-deps --ignore-engines
        # Build App
        - echo "Building Mobile Packages..."
        - npm run prepare
        - echo "//${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=${CI_JOB_TOKEN}" >> .npmrc
        - npm config set -- '//${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken' "${CI_JOB_TOKEN}"
        - npm publish --tag canary

build-experimental:
    stage: deploy
    rules:
        - if: $CI_COMMIT_BRANCH == "experimental"
    script:
        # Install dependencies
        - echo "INSTALLING DEPENDENCIES"
        - npm install --legacy-peer-deps --ignore-engines
        # Build App
        - echo "Building Mobile Packages..."
        - npm run prepare
        - echo "//${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=${CI_JOB_TOKEN}" >> .npmrc
        - npm config set -- '//${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken' "${CI_JOB_TOKEN}"
        - npm publish --tag experimental
